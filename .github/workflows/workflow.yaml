name: CI

env:
  RUST_VERSION: 1.76.0

on:
  push:
    branches:
      - main
  pull_request:

jobs:

  cargo-build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-12 ]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Rust
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION

      - name: Build
        shell: bash
        run: |
          cargo build --release --all-targets
        env:
          RUST_BACKTRACE: 1

  cargo-tests:
    runs-on: ${{ matrix.os }}
    needs: cargo-build
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-12 ]

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Rust
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION

      - name: Run Tests
        shell: bash
        run: |
          cargo test --release --all-targets --workspace --exclude benchmarks
        env:
          RUST_BACKTRACE: 1

  cargo-clippy:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Rust + Clippy
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION
          rustup component add clippy

      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets -- -D warnings

  rustfmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust + Clippy
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION

      - name: Install Rust + Rustfmt
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION
          rustup component add rustfmt

      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  keepsorted:
    runs-on: ${{ matrix.os }}
    needs: cargo-build
    strategy:
      matrix:
        os: [ ubuntu-20.04, macos-12 ]

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-1

      - name: Install Rust
        run: |
          rustup update $RUST_VERSION --no-self-update
          rustup default $RUST_VERSION

      - name: Build Project
        run: cargo build --release

      - name: Run KeepSorted
        shell: bash
        # Run `keepsorted` only on files that are not ignored by `.gitignore`.
        # Also ignore `./misc/` and `./tests/`.
        run: |
          git ls-files -co --exclude-standard \
              | grep -vE "^tests/|^misc/" \
              | xargs -I {} bash -c "./target/release/keepsorted '{}' --features gitignore" {} \
              | git diff --exit-code
        env:
          RUST_BACKTRACE: 1

  shell-checks:
    name: ShellCheck
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      env:
        SHELLCHECK_OPTS: -e SC1090 -e SC2119 -e SC1091

